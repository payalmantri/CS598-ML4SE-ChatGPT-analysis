
-----------------------------------------
 Prompt: what does the following code do?
Code:
def _compute_zs_mat(sz:TensorImageSize, scale:float, squish:float,
                   invert:bool, row_pct:float, col_pct:float)->AffineMatrix:
    "Utility routine to compute zoom/squish matrix."
    orig_ratio = math.sqrt(sz[1]/sz[0])
    for s,r,i in zip(scale,squish, invert):
        s,r = 1/math.sqrt(s),math.sqrt(r)
        if s * r <= 1 and s / r <= 1: #Test if we are completely inside the picture
            w,h = (s/r, s*r) if i else (s*r,s/r)
            col_c = (1-w) * (2*col_pct - 1)
            row_c = (1-h) * (2*row_pct - 1)
            return _get_zoom_mat(w, h, col_c, row_c)

    #Fallback, hack to emulate a center crop without cropping anything yet.
    if orig_ratio > 1: return _get_zoom_mat(1/orig_ratio**2, 1, 0, 0.)
    else:              return _get_zoom_mat(1, orig_ratio**2, 0, 0.)

-----------------------------------------
ChatGPT response: The given function is a utility function that computes a zoom/squish matrix to be used for data augmentation in image processing. It takes in the following parameters:

sz: a tuple representing the dimensions of an image in the form of (height, width).
scale: a float value representing the maximum zoom scale to be applied to the image.
squish: a float value representing the maximum amount of squish to be applied to the image.
invert: a boolean value indicating whether to invert the squish or not.
row_pct: a float value between 0 and 1 representing the percentage of the row where the zoom/squish matrix should be applied.
col_pct: a float value between 0 and 1 representing the percentage of the column where the zoom/squish matrix should be applied.
It first calculates the original aspect ratio of the image and then iteratively applies the specified scale and squish parameters to compute a matrix that can be used for zooming/squishing the image. If the matrix completely fits inside the image dimensions, it returns the computed matrix. Otherwise, it falls back to a center crop method to ensure that the zoom/squish matrix remains within the image dimensions. Finally, the function returns the computed zoom/squish matrix.
