
----------------------------------------
 Prompt: can you write semantically equivalent but different code to the given function
Code:
def adjust_learning_rate(optimizer, epoch, gammas, schedule):
  """Sets the learning rate to the initial LR decayed by 10 every 30 epochs"""
  lr = args.learning_rate
  assert len(gammas) == len(schedule), "length of gammas and schedule should be equal"
  for (gamma, step) in zip(gammas, schedule):
    if (epoch >= step):
      lr = lr * gamma
    else:
      break
  for param_group in optimizer.param_groups:
    param_group['lr'] = lr
  return lr
-----------------------------------------
ChatGPT response: def adjust_learning_rate(optimizer, epoch, gammas, schedule):
    for i, (gamma, step) in enumerate(zip(gammas, schedule)):
        if epoch >= step:
            optimizer.param_groups[i]['lr'] *= gamma
    return optimizer.param_groups[0]['lr']

