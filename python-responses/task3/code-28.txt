
----------------------------------------
 Prompt: can you write semantically equivalent code to the given function
Code:
def cast_scalar_to_array(shape, value, dtype=None):
    """
    create np.ndarray of specified shape and dtype, filled with values

    Parameters
    ----------
    shape : tuple
    value : scalar value
    dtype : np.dtype, optional
        dtype to coerce

    Returns
    -------
    ndarray of shape, filled with value, of specified / inferred dtype

    """

    if dtype is None:
        dtype, fill_value = infer_dtype_from_scalar(value)
    else:
        fill_value = value

    values = np.empty(shape, dtype=dtype)
    values.fill(fill_value)

    return values
-----------------------------------------
ChatGPT response: def cast_scalar_to_array(shape, value, dtype=None):
    """
    create np.ndarray of specified shape and dtype, filled with values

    Parameters
    ----------
    shape : tuple
    value : scalar value
    dtype : np.dtype, optional
        dtype to coerce

    Returns
    -------
    ndarray of shape, filled with value, of specified / inferred dtype

    """
    # Determine the data type of the array
    if dtype is None:
        dtype = type(value)
        if dtype == bool:
            # Boolean scalars are stored as integers in NumPy, so use np.bool instead
            dtype = np.bool_
    
    # Create the array and fill it with the specified value
    values = np.full(shape, value, dtype=dtype)

    return values

