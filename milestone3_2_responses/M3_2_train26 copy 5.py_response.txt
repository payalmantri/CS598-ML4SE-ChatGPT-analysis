Given that the following code should do the following task, is the code buggy or not?

Task:
The function is_dict_like() takes an object as input and checks whether the object has properties of a dictionary or not.

It does so by checking if the object has the following dictionary-like attributes:

__getitem__: method used for getting an item with a specific key.
keys: method used for returning a list of keys in the dictionary.
__contains__: method used for checking if a key exists in the dictionary.
If the object has all these attributes, the function returns True, indicating that the object is dictionary-like. Otherwise, the function returns False.

The function also excludes classes from being considered as dictionary-like by checking if the object is an instance of type.

The function includes examples of how to use it and test cases for some common objects.
Code:
def is_dict_like(obj):
    """
    Check if the object is dict-like.

    Parameters
    ----------
    obj : The object to check

    Returns
    -------
    is_dict_like : bool
        Whether `obj` has dict-like properties.

    Examples
    --------
    >>> is_dict_like({1: 2})
    True
    >>> is_dict_like([1, 2, 3])
    False
    >>> is_dict_like(dict)
    False
    >>> is_dict_like(dict())
    True
    """
    dict_like_attrs = ("__getitem", "keys", "__contains__")
    return (all(hasattr(obj, attr) for attr in dict_like_attrs)
            # [GH 25196] exclude classes
            and not isinstance(obj, type))
The code is almost correct, but there is a small typo in the string " __getitem__", where the trailing underscore is missing. Therefore, the corrected string should be "__getitem__".
The code I provided above is buggy. Where is the bug?
The bug in the code is that the dictionary-like attribute `__getitem__` is missing an underscore at the end of its name in the `dict_like_attrs` tuple, which is causing the `hasattr()` check to fail. To fix this, the underscore needs to be added to `__getitem__` in the tuple. So the corrected `dict_like_attrs` tuple should be `("__getitem__", "keys", "__contains__")` instead of `("__getitem", "keys", "__contains__")`.